CREATE TABLE IF NOT EXISTS users (
	user_id INTEGER generated BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL,
    login VARCHAR(100) NOT NULL,
    birthday DATE
);

CREATE TABLE IF NOT EXISTS friendship (
    user_id INTEGER REFERENCES users (user_id) ON DELETE CASCADE,
    friend_id INTEGER REFERENCES users (user_id) ON DELETE CASCADE,
    status boolean
);

CREATE TABLE IF NOT EXISTS genre (
    genre_id INTEGER generated BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS rating (
    rating_id INTEGER generated BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(20) NOT NULL UNIQUE,
    description VARCHAR(100) NOT NULL
);

CREATE TABLE IF NOT EXISTS film (
    film_id INTEGER generated BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(200) NOT NULL,
    release_date DATE,
    duration INTEGER NOT NULL,
    rating_id INTEGER NOT NULL REFERENCES rating (rating_id) ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS film_genre (
    film_id INTEGER REFERENCES film (film_id) ON DELETE CASCADE,
    genre_id INTEGER REFERENCES genre (genre_id) ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS favorite_film (
    film_id INTEGER REFERENCES film (film_id) ON DELETE CASCADE,
    user_id INTEGER REFERENCES users (user_id)
);